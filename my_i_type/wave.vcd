$version Generated by VerilatedVcd $end
$timescale 1s $end
 $scope module top $end
  $scope module test_top $end
   $var wire 1 h rst_i $end
   $var wire 1 i clk_i $end
   $var wire 32 - pc_wire [31:0] $end
   $var wire 1 . ce_wire $end
   $var wire 32 - if_inst_addr_o [31:0] $end
   $var wire 32 / if_inst_o [31:0] $end
   $var wire 32 0 if_id_inst_addr_o [31:0] $end
   $var wire 32 1 if_id_inst_o [31:0] $end
   $var wire 32 j id_inst_o [31:0] $end
   $var wire 32 k id_op1_o [31:0] $end
   $var wire 32 l id_op2_o [31:0] $end
   $var wire 1 m id_reg_we_o $end
   $var wire 5 n id_reg_waddr_o [4:0] $end
   $var wire 5 $ id_reg1_addr_o [4:0] $end
   $var wire 5 q id_reg2_addr_o [4:0] $end
   $var wire 1 % id_reg1_re_o $end
   $var wire 1 r id_reg2_re_o $end
   $var wire 32 & reg1_data_o [31:0] $end
   $var wire 32 s reg2_data_o [31:0] $end
   $var wire 32 2 id_exe_op1_o [31:0] $end
   $var wire 32 3 id_exe_op2_o [31:0] $end
   $var wire 1 4 id_exe_reg_we_o $end
   $var wire 5 5 id_exe_reg_waddr_o [4:0] $end
   $var wire 32 6 id_exe_inst_o [31:0] $end
   $var wire 5 ' exe_reg_waddr_o [4:0] $end
   $var wire 1 ( exe_reg_we_o $end
   $var wire 32 ) exe_reg_wdata_o [31:0] $end
   $var wire 5 7 exe_mem_reg_waddr_o [4:0] $end
   $var wire 1 8 exe_mem_reg_we_o $end
   $var wire 32 9 exe_mem_reg_wdata_o [31:0] $end
   $var wire 5 * mem_reg_waddr_o [4:0] $end
   $var wire 1 + mem_reg_we_o $end
   $var wire 32 , mem_reg_wdata_o [31:0] $end
   $var wire 5 : mem_wb_reg_waddr_o [4:0] $end
   $var wire 1 ; mem_wb_reg_we_o $end
   $var wire 32 < mem_wb_reg_wdata_o [31:0] $end
   $scope module rom0 $end
    $var wire 1 i clk_i $end
    $var wire 1 . ce_i $end
    $var wire 32 - addr_i [31:0] $end
    $var wire 32 / inst_o [31:0] $end
    $var wire 21 G addr4 [20:0] $end
    $scope module writeByte__Vstatic__unnamedblk1 $end
     $var wire 32 p t_addr [31:0] $end
    $upscope $end
   $upscope $end
   $scope module regfile0 $end
    $var wire 1 i clk_i $end
    $var wire 1 h rst_i $end
    $var wire 1 ; we_i $end
    $var wire 5 : waddr_i [4:0] $end
    $var wire 32 < wdata_i [31:0] $end
    $var wire 1 % re1_i $end
    $var wire 5 $ raddr1_i [4:0] $end
    $var wire 1 r re2_i $end
    $var wire 5 q raddr2_i [4:0] $end
    $var wire 32 & rdata1_o [31:0] $end
    $var wire 32 s rdata2_o [31:0] $end
    $var wire 32 H regs[0] [31:0] $end
    $var wire 32 I regs[1] [31:0] $end
    $var wire 32 J regs[2] [31:0] $end
    $var wire 32 K regs[3] [31:0] $end
    $var wire 32 L regs[4] [31:0] $end
    $var wire 32 M regs[5] [31:0] $end
    $var wire 32 N regs[6] [31:0] $end
    $var wire 32 O regs[7] [31:0] $end
    $var wire 32 P regs[8] [31:0] $end
    $var wire 32 Q regs[9] [31:0] $end
    $var wire 32 R regs[10] [31:0] $end
    $var wire 32 S regs[11] [31:0] $end
    $var wire 32 T regs[12] [31:0] $end
    $var wire 32 U regs[13] [31:0] $end
    $var wire 32 V regs[14] [31:0] $end
    $var wire 32 W regs[15] [31:0] $end
    $var wire 32 X regs[16] [31:0] $end
    $var wire 32 Y regs[17] [31:0] $end
    $var wire 32 Z regs[18] [31:0] $end
    $var wire 32 [ regs[19] [31:0] $end
    $var wire 32 \ regs[20] [31:0] $end
    $var wire 32 ] regs[21] [31:0] $end
    $var wire 32 ^ regs[22] [31:0] $end
    $var wire 32 _ regs[23] [31:0] $end
    $var wire 32 ` regs[24] [31:0] $end
    $var wire 32 a regs[25] [31:0] $end
    $var wire 32 b regs[26] [31:0] $end
    $var wire 32 c regs[27] [31:0] $end
    $var wire 32 d regs[28] [31:0] $end
    $var wire 32 e regs[29] [31:0] $end
    $var wire 32 f regs[30] [31:0] $end
    $var wire 32 g regs[31] [31:0] $end
    $var wire 32 # i [31:0] $end
   $upscope $end
   $scope module exe0 $end
    $var wire 1 h rst_i $end
    $var wire 32 2 op1_i [31:0] $end
    $var wire 32 3 op2_i [31:0] $end
    $var wire 1 4 reg_we_i $end
    $var wire 5 5 reg_waddr_i [4:0] $end
    $var wire 32 6 inst_i [31:0] $end
    $var wire 5 ' reg_waddr_o [4:0] $end
    $var wire 1 ( reg_we_o $end
    $var wire 32 ) reg_wdata_o [31:0] $end
    $var wire 7 = opcode [6:0] $end
    $var wire 3 > funct3 [2:0] $end
    $var wire 7 ? funct7 [6:0] $end
    $var wire 5 @ shamt [4:0] $end
   $upscope $end
   $scope module exe_mem0 $end
    $var wire 1 h rst_i $end
    $var wire 1 i clk_i $end
    $var wire 5 ' reg_waddr_i [4:0] $end
    $var wire 1 ( reg_we_i $end
    $var wire 32 ) reg_wdata_i [31:0] $end
    $var wire 5 7 reg_waddr_o [4:0] $end
    $var wire 1 8 reg_we_o $end
    $var wire 32 9 reg_wdata_o [31:0] $end
   $upscope $end
   $scope module id0 $end
    $var wire 1 h rst_i $end
    $var wire 32 0 inst_addr_i [31:0] $end
    $var wire 32 1 inst_i [31:0] $end
    $var wire 32 & reg1_rdata_i [31:0] $end
    $var wire 32 s reg2_rdata_i [31:0] $end
    $var wire 5 ' exe_reg_waddr_i [4:0] $end
    $var wire 32 ) exe_reg_wdata_i [31:0] $end
    $var wire 1 ( exe_reg_we_i $end
    $var wire 5 * mem_reg_waddr_i [4:0] $end
    $var wire 32 , mem_reg_wdata_i [31:0] $end
    $var wire 1 + mem_reg_we_i $end
    $var wire 5 $ reg1_raddr_o [4:0] $end
    $var wire 5 q reg2_raddr_o [4:0] $end
    $var wire 1 % reg1_re_o $end
    $var wire 1 r reg2_re_o $end
    $var wire 32 j inst_o [31:0] $end
    $var wire 32 k op1_o [31:0] $end
    $var wire 32 l op2_o [31:0] $end
    $var wire 1 m reg_we_o $end
    $var wire 5 n reg_waddr_o [4:0] $end
    $var wire 32 o op1_o_final [31:0] $end
    $var wire 32 l op2_o_final [31:0] $end
    $var wire 7 A opcode [6:0] $end
    $var wire 5 B i_reg1_raddr_o [4:0] $end
    $var wire 5 q i_reg2_raddr_o [4:0] $end
    $var wire 1 t i_reg1_re_o $end
    $var wire 1 r i_reg2_re_o $end
    $var wire 32 & i_op1_o [31:0] $end
    $var wire 32 C i_op2_o [31:0] $end
    $var wire 1 t i_reg_we_o $end
    $var wire 5 D i_reg_waddr_o [4:0] $end
    $scope module inst_type_i $end
     $var wire 32 1 inst_i [31:0] $end
     $var wire 32 & reg1_rdata_i [31:0] $end
     $var wire 32 s reg2_rdata_i [31:0] $end
     $var wire 5 B reg1_raddr_o [4:0] $end
     $var wire 5 q reg2_raddr_o [4:0] $end
     $var wire 1 t reg1_re_o $end
     $var wire 1 r reg2_re_o $end
     $var wire 32 & op1_o [31:0] $end
     $var wire 32 C op2_o [31:0] $end
     $var wire 1 t reg_we_o $end
     $var wire 5 D reg_waddr_o [4:0] $end
     $var wire 3 E funct3 [2:0] $end
     $var wire 5 D rd [4:0] $end
     $var wire 5 B rs1 [4:0] $end
     $var wire 5 F rs2 [4:0] $end
    $upscope $end
   $upscope $end
   $scope module id_exe0 $end
    $var wire 1 h rst_i $end
    $var wire 1 i clk_i $end
    $var wire 32 k op1_i [31:0] $end
    $var wire 32 l op2_i [31:0] $end
    $var wire 1 m reg_we_i $end
    $var wire 5 n reg_waddr_i [4:0] $end
    $var wire 32 j inst_i [31:0] $end
    $var wire 32 2 op1_o [31:0] $end
    $var wire 32 3 op2_o [31:0] $end
    $var wire 1 4 reg_we_o $end
    $var wire 5 5 reg_waddr_o [4:0] $end
    $var wire 32 6 inst_o [31:0] $end
   $upscope $end
   $scope module if_id0 $end
    $var wire 1 i clk_i $end
    $var wire 1 h rst_i $end
    $var wire 32 - inst_addr_i [31:0] $end
    $var wire 32 / inst_i [31:0] $end
    $var wire 32 0 inst_addr_o [31:0] $end
    $var wire 32 1 inst_o [31:0] $end
   $upscope $end
   $scope module mem0 $end
    $var wire 1 h rst_i $end
    $var wire 5 7 reg_waddr_i [4:0] $end
    $var wire 1 8 reg_we_i $end
    $var wire 32 9 reg_wdata_i [31:0] $end
    $var wire 5 * reg_waddr_o [4:0] $end
    $var wire 1 + reg_we_o $end
    $var wire 32 , reg_wdata_o [31:0] $end
   $upscope $end
   $scope module mem_wb0 $end
    $var wire 1 h rst_i $end
    $var wire 1 i clk_i $end
    $var wire 5 * reg_waddr_i [4:0] $end
    $var wire 1 + reg_we_i $end
    $var wire 32 , reg_wdata_i [31:0] $end
    $var wire 5 : reg_waddr_o [4:0] $end
    $var wire 1 ; reg_we_o $end
    $var wire 32 < reg_wdata_o [31:0] $end
   $upscope $end
   $scope module pc_reg0 $end
    $var wire 1 i clk_i $end
    $var wire 1 h rst_i $end
    $var wire 32 - pc_o [31:0] $end
    $var wire 1 . ce_o $end
   $upscope $end
  $upscope $end
  $var wire 1 h rst_i $end
  $var wire 1 i clk_i $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000100000 #
b00000 $
0%
b00000000000000000000000000000000 &
b00000 '
0(
b00000000000000000000000000000000 )
b00000 *
1+
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
0.
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
04
b00000 5
b00000000000000000000000000000000 6
b00000 7
08
b00000000000000000000000000000000 9
b00000 :
0;
b00000000000000000000000000000000 <
b0000000 =
b000 >
b0000000 ?
b00000 @
b0000000 A
b00000 B
b00000000000000000000000000000000 C
b00000 D
b000 E
b00000 F
b000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
1h
0i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
0m
b00000 n
b00000000000000000000000000000000 o
b00000000000000000000000000011111 p
b00000 q
0r
b00000000000000000000000000000000 s
1t
#10
18
1;
1i
#15
0i
#20
1i
#25
0i
#30
1i
#35
0i
#40
1i
#45
0i
#50
1i
#55
0h
0i
#60
0+
1.
08
1i
#65
0i
#70
b00000000000000000000000000000100 -
b00000000101000010110001000010011 /
0;
b000000000000000000100 G
1i
#75
0i
#80
b00010 $
1%
b00000000000000000000000000001000 -
b00000000010100100000001010010011 /
b00000000000000000000000000000100 0
b00000000101000010110001000010011 1
b0010011 A
b00010 B
b00000000000000000000000000001010 C
b00100 D
b110 E
b01010 F
b000000000000000001000 G
1i
b00000000101000010110001000010011 j
b00000000000000000000000000001010 l
1m
b00100 n
#85
0i
#90
b00100 $
b00100 '
1(
b00000000000000000000000000001010 )
b00000000000000000000000000001100 -
b11111001110000101100001100010011 /
b00000000000000000000000000001000 0
b00000000010100100000001010010011 1
b00000000000000000000000000001010 3
14
b00100 5
b00000000101000010110001000010011 6
b0010011 =
b110 >
b01010 @
b00100 B
b00000000000000000000000000000101 C
b00101 D
b000 E
b00101 F
b000000000000000001100 G
1i
b00000000010100100000001010010011 j
b00000000000000000000000000001010 k
b00000000000000000000000000000101 l
b00101 n
#95
0i
#100
b00101 $
b00101 '
b00000000000000000000000000001111 )
b00100 *
1+
b00000000000000000000000000001010 ,
b00000000000000000000000000010000 -
b00000000101000110111001110010011 /
b00000000000000000000000000001100 0
b11111001110000101100001100010011 1
b00000000000000000000000000001010 2
b00000000000000000000000000000101 3
b00101 5
b00000000010100100000001010010011 6
b00100 7
18
b00000000000000000000000000001010 9
b000 >
b00101 @
b00101 B
b11111111111111111111111110011100 C
b00110 D
b100 E
b11100 F
b000000000000000010000 G
1i
b11111001110000101100001100010011 j
b00000000000000000000000000001111 k
b11111111111111111111111110011100 l
b00110 n
#105
0i
#110
b00110 $
b00110 '
b11111111111111111111111110010011 )
b00101 *
b00000000000000000000000000001111 ,
b00000000000000000000000000010100 -
b00000000011000101011010000010011 /
b00000000000000000000000000010000 0
b00000000101000110111001110010011 1
b00000000000000000000000000001111 2
b11111111111111111111111110011100 3
b00110 5
b11111001110000101100001100010011 6
b00101 7
b00000000000000000000000000001111 9
b00100 :
1;
b00000000000000000000000000001010 <
b100 >
b1111100 ?
b11100 @
b00110 B
b00000000000000000000000000001010 C
b00111 D
b111 E
b01010 F
b000000000000000010100 G
1i
b00000000101000110111001110010011 j
b11111111111111111111111110010011 k
b00000000000000000000000000001010 l
b00111 n
#115
0i
#120
b00101 $
b00000000000000000000000000001111 &
b00111 '
b00000000000000000000000000000010 )
b00110 *
b11111111111111111111111110010011 ,
b00000000000000000000000000011000 -
b11111111101100110010010010010011 /
b00000000000000000000000000010100 0
b00000000011000101011010000010011 1
b11111111111111111111111110010011 2
b00000000000000000000000000001010 3
b00111 5
b00000000101000110111001110010011 6
b00110 7
b11111111111111111111111110010011 9
b00101 :
b00000000000000000000000000001111 <
b111 >
b0000000 ?
b01010 @
b00101 B
b00000000000000000000000000000110 C
b01000 D
b011 E
b00110 F
b000000000000000011000 G
b00000000000000000000000000001010 L
1i
b00000000011000101011010000010011 j
b00000000000000000000000000001111 k
b00000000000000000000000000000110 l
b01000 n
b00000000000000000000000000001111 o
#125
0i
#130
b00110 $
b11111111111111111111111110010011 &
b01000 '
b00000000000000000000000000000000 )
b00111 *
b00000000000000000000000000000010 ,
b00000000000000000000000000011100 -
b00000000001000100001010100010011 /
b00000000000000000000000000011000 0
b11111111101100110010010010010011 1
b00000000000000000000000000001111 2
b00000000000000000000000000000110 3
b01000 5
b00000000011000101011010000010011 6
b00111 7
b00000000000000000000000000000010 9
b00110 :
b11111111111111111111111110010011 <
b011 >
b00110 @
b00110 B
b11111111111111111111111111111011 C
b01001 D
b010 E
b11011 F
b000000000000000011100 G
b00000000000000000000000000001111 M
1i
b11111111101100110010010010010011 j
b11111111111111111111111110010011 k
b11111111111111111111111111111011 l
b01001 n
b11111111111111111111111110010011 o
#135
0i
#140
b00100 $
b00000000000000000000000000001010 &
b01001 '
b00000000000000000000000000000001 )
b01000 *
b00000000000000000000000000000000 ,
b00000000000000000000000000100000 -
b00000000001100110101010110010011 /
b00000000000000000000000000011100 0
b00000000001000100001010100010011 1
b11111111111111111111111110010011 2
b11111111111111111111111111111011 3
b01001 5
b11111111101100110010010010010011 6
b01000 7
b00000000000000000000000000000000 9
b00111 :
b00000000000000000000000000000010 <
b010 >
b1111111 ?
b11011 @
b00100 B
b00000000000000000000000000000010 C
b01010 D
b001 E
b00010 F
b000000000000000100000 G
b11111111111111111111111110010011 N
1i
b00000000001000100001010100010011 j
b00000000000000000000000000001010 k
b00000000000000000000000000000010 l
b01010 n
b00000000000000000000000000001010 o
#145
0i
#150
b00110 $
b11111111111111111111111110010011 &
b01010 '
b00000000000000000000000000101000 )
b01001 *
b00000000000000000000000000000001 ,
b00000000000000000000000000100100 -
b00000000000000000000000000000000 /
b00000000000000000000000000100000 0
b00000000001100110101010110010011 1
b00000000000000000000000000001010 2
b00000000000000000000000000000010 3
b01010 5
b00000000001000100001010100010011 6
b01001 7
b00000000000000000000000000000001 9
b01000 :
b00000000000000000000000000000000 <
b001 >
b0000000 ?
b00010 @
b00110 B
b00000000000000000000000000000011 C
b01011 D
b101 E
b00011 F
b000000000000000100100 G
b00000000000000000000000000000010 O
1i
b00000000001100110101010110010011 j
b11111111111111111111111110010011 k
b00000000000000000000000000000011 l
b01011 n
b11111111111111111111111110010011 o
#155
0i
#160
b00000 $
0%
b00000000000000000000000000000000 &
b01011 '
b00011111111111111111111111110010 )
b01010 *
b00000000000000000000000000101000 ,
b00000000000000000000000000101000 -
b00000000000000000000000000100100 0
b00000000000000000000000000000000 1
b11111111111111111111111110010011 2
b00000000000000000000000000000011 3
b01011 5
b00000000001100110101010110010011 6
b01010 7
b00000000000000000000000000101000 9
b01001 :
b00000000000000000000000000000001 <
b101 >
b00011 @
b0000000 A
b00000 B
b00000000000000000000000000000000 C
b00000 D
b000 E
b00000 F
b000000000000000101000 G
1i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
0m
b00000 n
b00000000000000000000000000000000 o
#165
0i
#170
b00000 '
0(
b00000000000000000000000000000000 )
b01011 *
b00011111111111111111111111110010 ,
b00000000000000000000000000101100 -
b00000000000000000000000000101000 0
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
04
b00000 5
b00000000000000000000000000000000 6
b01011 7
b00011111111111111111111111110010 9
b01010 :
b00000000000000000000000000101000 <
b0000000 =
b000 >
b00000 @
b000000000000000101100 G
b00000000000000000000000000000001 Q
1i
#175
0i
#180
b00000 *
0+
b00000000000000000000000000000000 ,
b00000000000000000000000000110000 -
b00000000000000000000000000101100 0
b00000 7
08
b00000000000000000000000000000000 9
b01011 :
b00011111111111111111111111110010 <
b000000000000000110000 G
b00000000000000000000000000101000 R
1i
#185
0i
#190
b00000000000000000000000000110100 -
b00000000000000000000000000110000 0
b00000 :
0;
b00000000000000000000000000000000 <
b000000000000000110100 G
b00011111111111111111111111110010 S
1i
#195
0i
#200
b00000000000000000000000000111000 -
b00000000000000000000000000110100 0
b000000000000000111000 G
1i
#205
0i
#210
b00000000000000000000000000111100 -
b00000000000000000000000000111000 0
b000000000000000111100 G
1i
#215
0i
#220
b00000000000000000000000001000000 -
b00000000000000000000000000111100 0
b000000000000001000000 G
1i
#225
0i
#230
b00000000000000000000000001000100 -
b00000000000000000000000001000000 0
b000000000000001000100 G
1i
#235
0i
#240
b00000000000000000000000001001000 -
b00000000000000000000000001000100 0
b000000000000001001000 G
1i
#245
0i
#250
b00000000000000000000000001001100 -
b00000000000000000000000001001000 0
b000000000000001001100 G
1i
