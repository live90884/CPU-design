$version Generated by VerilatedVcd $end
$timescale 1s $end
 $scope module top $end
  $scope module test_top $end
   $var wire 1 *! rst_i $end
   $var wire 1 +! clk_i $end
   $var wire 32 < pc_wire [31:0] $end
   $var wire 1 = ce_wire $end
   $var wire 32 < if_inst_addr_o [31:0] $end
   $var wire 32 > if_inst_o [31:0] $end
   $var wire 32 ? if_id_inst_addr_o [31:0] $end
   $var wire 32 @ if_id_inst_o [31:0] $end
   $var wire 32 $ id_inst_o [31:0] $end
   $var wire 32 % id_op1_o [31:0] $end
   $var wire 32 & id_op2_o [31:0] $end
   $var wire 1 ' id_reg_we_o $end
   $var wire 5 ( id_reg_waddr_o [4:0] $end
   $var wire 5 ) id_reg1_addr_o [4:0] $end
   $var wire 5 * id_reg2_addr_o [4:0] $end
   $var wire 1 + id_reg1_re_o $end
   $var wire 1 , id_reg2_re_o $end
   $var wire 32 - reg1_data_o [31:0] $end
   $var wire 32 . reg2_data_o [31:0] $end
   $var wire 32 A id_exe_op1_o [31:0] $end
   $var wire 32 B id_exe_op2_o [31:0] $end
   $var wire 1 C id_exe_reg_we_o $end
   $var wire 5 D id_exe_reg_waddr_o [4:0] $end
   $var wire 32 E id_exe_inst_o [31:0] $end
   $var wire 5 / exe_reg_waddr_o [4:0] $end
   $var wire 1 0 exe_reg_we_o $end
   $var wire 32 1 exe_reg_wdata_o [31:0] $end
   $var wire 5 F exe_mem_reg_waddr_o [4:0] $end
   $var wire 1 G exe_mem_reg_we_o $end
   $var wire 32 H exe_mem_reg_wdata_o [31:0] $end
   $var wire 5 2 mem_reg_waddr_o [4:0] $end
   $var wire 1 3 mem_reg_we_o $end
   $var wire 32 4 mem_reg_wdata_o [31:0] $end
   $var wire 5 I mem_wb_reg_waddr_o [4:0] $end
   $var wire 1 J mem_wb_reg_we_o $end
   $var wire 32 K mem_wb_reg_wdata_o [31:0] $end
   $scope module rom0 $end
    $var wire 1 +! clk_i $end
    $var wire 1 = ce_i $end
    $var wire 32 < addr_i [31:0] $end
    $var wire 32 > inst_o [31:0] $end
    $var wire 21 g addr4 [20:0] $end
    $scope module writeByte__Vstatic__unnamedblk1 $end
     $var wire 32 ,! t_addr [31:0] $end
    $upscope $end
   $upscope $end
   $scope module regfile0 $end
    $var wire 1 +! clk_i $end
    $var wire 1 *! rst_i $end
    $var wire 1 J we_i $end
    $var wire 5 I waddr_i [4:0] $end
    $var wire 32 K wdata_i [31:0] $end
    $var wire 1 + re1_i $end
    $var wire 5 ) raddr1_i [4:0] $end
    $var wire 1 , re2_i $end
    $var wire 5 * raddr2_i [4:0] $end
    $var wire 32 - rdata1_o [31:0] $end
    $var wire 32 . rdata2_o [31:0] $end
    $var wire 32 h regs[0] [31:0] $end
    $var wire 32 i regs[1] [31:0] $end
    $var wire 32 j regs[2] [31:0] $end
    $var wire 32 k regs[3] [31:0] $end
    $var wire 32 l regs[4] [31:0] $end
    $var wire 32 m regs[5] [31:0] $end
    $var wire 32 n regs[6] [31:0] $end
    $var wire 32 o regs[7] [31:0] $end
    $var wire 32 p regs[8] [31:0] $end
    $var wire 32 q regs[9] [31:0] $end
    $var wire 32 r regs[10] [31:0] $end
    $var wire 32 s regs[11] [31:0] $end
    $var wire 32 t regs[12] [31:0] $end
    $var wire 32 u regs[13] [31:0] $end
    $var wire 32 v regs[14] [31:0] $end
    $var wire 32 w regs[15] [31:0] $end
    $var wire 32 x regs[16] [31:0] $end
    $var wire 32 y regs[17] [31:0] $end
    $var wire 32 z regs[18] [31:0] $end
    $var wire 32 { regs[19] [31:0] $end
    $var wire 32 | regs[20] [31:0] $end
    $var wire 32 } regs[21] [31:0] $end
    $var wire 32 ~ regs[22] [31:0] $end
    $var wire 32 !! regs[23] [31:0] $end
    $var wire 32 "! regs[24] [31:0] $end
    $var wire 32 #! regs[25] [31:0] $end
    $var wire 32 $! regs[26] [31:0] $end
    $var wire 32 %! regs[27] [31:0] $end
    $var wire 32 &! regs[28] [31:0] $end
    $var wire 32 '! regs[29] [31:0] $end
    $var wire 32 (! regs[30] [31:0] $end
    $var wire 32 )! regs[31] [31:0] $end
    $var wire 32 # i [31:0] $end
   $upscope $end
   $scope module exe0 $end
    $var wire 1 *! rst_i $end
    $var wire 32 A op1_i [31:0] $end
    $var wire 32 B op2_i [31:0] $end
    $var wire 1 C reg_we_i $end
    $var wire 5 D reg_waddr_i [4:0] $end
    $var wire 32 E inst_i [31:0] $end
    $var wire 5 / reg_waddr_o [4:0] $end
    $var wire 1 0 reg_we_o $end
    $var wire 32 1 reg_wdata_o [31:0] $end
    $var wire 7 L opcode [6:0] $end
    $var wire 3 M funct3 [2:0] $end
    $var wire 7 N funct7 [6:0] $end
    $var wire 1 -! i_reg_we_o $end
    $var wire 32 5 i_reg_wdata_o [31:0] $end
    $var wire 1 -! r_reg_we_o $end
    $var wire 32 6 r_reg_wdata_o [31:0] $end
    $scope module exe_type_i0 $end
     $var wire 1 *! rst_i $end
     $var wire 32 A op1_i [31:0] $end
     $var wire 32 B op2_i [31:0] $end
     $var wire 32 E inst_i [31:0] $end
     $var wire 32 5 reg_wdata_o [31:0] $end
     $var wire 1 -! reg_we_o $end
     $var wire 7 L opcode [6:0] $end
     $var wire 3 M funct3 [2:0] $end
     $var wire 7 N funct7 [6:0] $end
     $var wire 1 O isType_i $end
    $upscope $end
    $scope module exe_type_r0 $end
     $var wire 1 *! rst_i $end
     $var wire 32 A op1_i [31:0] $end
     $var wire 32 B op2_i [31:0] $end
     $var wire 32 E inst_i [31:0] $end
     $var wire 32 6 reg_wdata_o [31:0] $end
     $var wire 1 -! reg_we_o $end
     $var wire 7 L opcode [6:0] $end
     $var wire 3 M funct3 [2:0] $end
     $var wire 7 N funct7 [6:0] $end
     $var wire 1 P isType_r $end
    $upscope $end
   $upscope $end
   $scope module exe_mem0 $end
    $var wire 1 *! rst_i $end
    $var wire 1 +! clk_i $end
    $var wire 5 / reg_waddr_i [4:0] $end
    $var wire 1 0 reg_we_i $end
    $var wire 32 1 reg_wdata_i [31:0] $end
    $var wire 5 F reg_waddr_o [4:0] $end
    $var wire 1 G reg_we_o $end
    $var wire 32 H reg_wdata_o [31:0] $end
   $upscope $end
   $scope module id0 $end
    $var wire 1 *! rst_i $end
    $var wire 32 ? inst_addr_i [31:0] $end
    $var wire 32 @ inst_i [31:0] $end
    $var wire 32 - reg1_rdata_i [31:0] $end
    $var wire 32 . reg2_rdata_i [31:0] $end
    $var wire 5 / exe_reg_waddr_i [4:0] $end
    $var wire 32 1 exe_reg_wdata_i [31:0] $end
    $var wire 1 0 exe_reg_we_i $end
    $var wire 5 2 mem_reg_waddr_i [4:0] $end
    $var wire 32 4 mem_reg_wdata_i [31:0] $end
    $var wire 1 3 mem_reg_we_i $end
    $var wire 5 ) reg1_raddr_o [4:0] $end
    $var wire 5 * reg2_raddr_o [4:0] $end
    $var wire 1 + reg1_re_o $end
    $var wire 1 , reg2_re_o $end
    $var wire 32 $ inst_o [31:0] $end
    $var wire 32 % op1_o [31:0] $end
    $var wire 32 & op2_o [31:0] $end
    $var wire 1 ' reg_we_o $end
    $var wire 5 ( reg_waddr_o [4:0] $end
    $var wire 32 7 op1_o_final [31:0] $end
    $var wire 32 8 op2_o_final [31:0] $end
    $var wire 7 Q funct7 [6:0] $end
    $var wire 7 R opcode [6:0] $end
    $var wire 3 S funct3 [2:0] $end
    $var wire 5 T rd [4:0] $end
    $var wire 5 U rs1 [4:0] $end
    $var wire 5 V rs2 [4:0] $end
    $var wire 5 W i_reg1_raddr_o [4:0] $end
    $var wire 5 X i_reg2_raddr_o [4:0] $end
    $var wire 1 Y i_reg1_re_o $end
    $var wire 1 Z i_reg2_re_o $end
    $var wire 32 9 i_op1_o [31:0] $end
    $var wire 32 [ i_op2_o [31:0] $end
    $var wire 1 \ i_reg_we_o $end
    $var wire 5 ] i_reg_waddr_o [4:0] $end
    $var wire 5 ^ r_reg1_raddr_o [4:0] $end
    $var wire 5 _ r_reg2_raddr_o [4:0] $end
    $var wire 1 ` r_reg1_re_o $end
    $var wire 1 a r_reg2_re_o $end
    $var wire 32 : r_op1_o [31:0] $end
    $var wire 32 ; r_op2_o [31:0] $end
    $var wire 1 b r_reg_we_o $end
    $var wire 5 c r_reg_waddr_o [4:0] $end
    $scope module inst_type_i $end
     $var wire 32 @ inst_i [31:0] $end
     $var wire 32 - reg1_rdata_i [31:0] $end
     $var wire 5 W reg1_raddr_o [4:0] $end
     $var wire 5 X reg2_raddr_o [4:0] $end
     $var wire 1 Y reg1_re_o $end
     $var wire 1 Z reg2_re_o $end
     $var wire 32 9 op1_o [31:0] $end
     $var wire 32 [ op2_o [31:0] $end
     $var wire 1 \ reg_we_o $end
     $var wire 5 ] reg_waddr_o [4:0] $end
     $var wire 7 R opcode [6:0] $end
     $var wire 3 S funct3 [2:0] $end
     $var wire 7 Q funct7 [6:0] $end
     $var wire 5 V shamt [4:0] $end
     $var wire 5 T rd [4:0] $end
     $var wire 5 U rs1 [4:0] $end
     $var wire 5 V rs2 [4:0] $end
     $var wire 1 d isType_i $end
    $upscope $end
    $scope module inst_type_r $end
     $var wire 32 @ inst_i [31:0] $end
     $var wire 32 - reg1_rdata_i [31:0] $end
     $var wire 32 . reg2_rdata_i [31:0] $end
     $var wire 5 ^ reg1_raddr_o [4:0] $end
     $var wire 5 _ reg2_raddr_o [4:0] $end
     $var wire 1 ` reg1_re_o $end
     $var wire 1 a reg2_re_o $end
     $var wire 32 : op1_o [31:0] $end
     $var wire 32 ; op2_o [31:0] $end
     $var wire 1 b reg_we_o $end
     $var wire 5 c reg_waddr_o [4:0] $end
     $var wire 7 R opcode [6:0] $end
     $var wire 3 S funct3 [2:0] $end
     $var wire 7 Q funct7 [6:0] $end
     $var wire 5 V shamt [4:0] $end
     $var wire 5 T rd [4:0] $end
     $var wire 5 U rs1 [4:0] $end
     $var wire 5 V rs2 [4:0] $end
     $var wire 1 e isType_r $end
     $var wire 1 f isType_m $end
    $upscope $end
   $upscope $end
   $scope module id_exe0 $end
    $var wire 1 *! rst_i $end
    $var wire 1 +! clk_i $end
    $var wire 32 % op1_i [31:0] $end
    $var wire 32 & op2_i [31:0] $end
    $var wire 1 ' reg_we_i $end
    $var wire 5 ( reg_waddr_i [4:0] $end
    $var wire 32 $ inst_i [31:0] $end
    $var wire 32 A op1_o [31:0] $end
    $var wire 32 B op2_o [31:0] $end
    $var wire 1 C reg_we_o $end
    $var wire 5 D reg_waddr_o [4:0] $end
    $var wire 32 E inst_o [31:0] $end
   $upscope $end
   $scope module if_id0 $end
    $var wire 1 +! clk_i $end
    $var wire 1 *! rst_i $end
    $var wire 32 < inst_addr_i [31:0] $end
    $var wire 32 > inst_i [31:0] $end
    $var wire 32 ? inst_addr_o [31:0] $end
    $var wire 32 @ inst_o [31:0] $end
   $upscope $end
   $scope module mem0 $end
    $var wire 1 *! rst_i $end
    $var wire 5 F reg_waddr_i [4:0] $end
    $var wire 1 G reg_we_i $end
    $var wire 32 H reg_wdata_i [31:0] $end
    $var wire 5 2 reg_waddr_o [4:0] $end
    $var wire 1 3 reg_we_o $end
    $var wire 32 4 reg_wdata_o [31:0] $end
   $upscope $end
   $scope module mem_wb0 $end
    $var wire 1 *! rst_i $end
    $var wire 1 +! clk_i $end
    $var wire 5 2 reg_waddr_i [4:0] $end
    $var wire 1 3 reg_we_i $end
    $var wire 32 4 reg_wdata_i [31:0] $end
    $var wire 5 I reg_waddr_o [4:0] $end
    $var wire 1 J reg_we_o $end
    $var wire 32 K reg_wdata_o [31:0] $end
   $upscope $end
   $scope module pc_reg0 $end
    $var wire 1 +! clk_i $end
    $var wire 1 *! rst_i $end
    $var wire 32 < pc_o [31:0] $end
    $var wire 1 = ce_o $end
   $upscope $end
  $upscope $end
  $var wire 1 *! rst_i $end
  $var wire 1 +! clk_i $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000100000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
b00000 (
b00000 )
b00000 *
0+
0,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000 /
00
b00000000000000000000000000000000 1
b00000 2
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
0C
b00000 D
b00000000000000000000000000000000 E
b00000 F
0G
b00000000000000000000000000000000 H
b00000 I
0J
b00000000000000000000000000000000 K
b0000000 L
b000 M
b0000000 N
0O
0P
b0000000 Q
b0000000 R
b000 S
b00000 T
b00000 U
b00000 V
b00000 W
b00000 X
0Y
0Z
b00000000000000000000000000000000 [
0\
b00000 ]
b00000 ^
b00000 _
0`
0a
0b
b00000 c
0d
0e
0f
b000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
1*!
0+!
b00000000000000000000000000101111 ,!
1-!
#10
1G
1+!
#15
0+!
#20
1+!
#25
0+!
#30
1+!
#35
0+!
#40
1+!
#45
0+!
#50
1+!
#55
13
0*!
0+!
#60
03
1=
0G
1J
1+!
#65
0+!
#70
b00000000000000000000000000000100 <
b00000000010100100110001000010011 >
0J
b000000000000000000100 g
1+!
#75
0+!
#80
b00000000010100100110001000010011 $
b00000000000000000000000000000101 &
1'
b00100 (
b00100 )
1+
b00000000000000000000000000000101 8
b00000000000000000000000000001000 <
b00000000101000100110001010010011 >
b00000000000000000000000000000100 ?
b00000000010100100110001000010011 @
b0010011 R
b110 S
b00100 T
b00100 U
b00101 V
b00100 W
1Y
b00000000000000000000000000000101 [
1\
b00100 ]
1d
b000000000000000001000 g
1+!
#85
0+!
#90
b00000000101000100110001010010011 $
b00000000000000000000000000000101 %
b00000000000000000000000000001010 &
b00101 (
b00100 /
10
b00000000000000000000000000000101 1
b00000000000000000000000000000101 5
b00000000000000000000000000001010 8
b00000000000000000000000000001100 <
b00000000010000101000001100110011 >
b00000000000000000000000000001000 ?
b00000000101000100110001010010011 @
b00000000000000000000000000000101 B
1C
b00100 D
b00000000010100100110001000010011 E
b0010011 L
b110 M
1O
b00101 T
b01010 V
b00000000000000000000000000001010 [
b00101 ]
b000000000000000001100 g
1+!
#95
0+!
#100
b00000000010000101000001100110011 $
b00000000000000000000000000001111 %
b00000000000000000000000000000101 &
b00110 (
b00101 )
b00100 *
1,
b00101 /
b00000000000000000000000000001111 1
b00100 2
13
b00000000000000000000000000000101 4
b00000000000000000000000000001111 5
b00000000000000000000000000000000 8
b00000000000000000000000000010000 <
b01000000010000110000001110110011 >
b00000000000000000000000000001100 ?
b00000000010000101000001100110011 @
b00000000000000000000000000000101 A
b00000000000000000000000000001010 B
b00101 D
b00000000101000100110001010010011 E
b00100 F
1G
b00000000000000000000000000000101 H
b0110011 R
b000 S
b00110 T
b00101 U
b00100 V
b00000 W
0Y
b00000000000000000000000000000000 [
0\
b00000 ]
b00101 ^
b00100 _
1`
1a
1b
b00110 c
0d
1e
b000000000000000010000 g
1+!
#105
0+!
#110
b01000000010000110000001110110011 $
b00000000000000000000000000010100 %
b00111 (
b00110 )
b00000000000000000000000000000101 .
b00110 /
b00000000000000000000000000010100 1
b00101 2
b00000000000000000000000000001111 4
b00000000000000000000000000000000 5
b00000000000000000000000000010100 6
b00000000000000000000000000000101 8
b00000000000000000000000000000101 ;
b00000000000000000000000000010100 <
b00000000010000101100010000110011 >
b00000000000000000000000000010000 ?
b01000000010000110000001110110011 @
b00000000000000000000000000001111 A
b00000000000000000000000000000101 B
b00110 D
b00000000010000101000001100110011 E
b00101 F
b00000000000000000000000000001111 H
b00100 I
1J
b00000000000000000000000000000101 K
b0110011 L
b000 M
0O
1P
b0100000 Q
b00111 T
b00110 U
b00110 ^
b00111 c
b000000000000000010100 g
1+!
#115
0+!
#120
b00000000010000101100010000110011 $
b00000000000000000000000000001111 %
b01000 (
b00101 )
b00000000000000000000000000001111 -
b00111 /
b00000000000000000000000000001111 1
b00110 2
b00000000000000000000000000010100 4
b00000000000000000000000000001111 6
b00000000000000000000000000001111 7
b00000000000000000000000000001111 :
b00000000000000000000000000011000 <
b00000000010000101111010010110011 >
b00000000000000000000000000010100 ?
b00000000010000101100010000110011 @
b00000000000000000000000000010100 A
b00111 D
b01000000010000110000001110110011 E
b00110 F
b00000000000000000000000000010100 H
b00101 I
b00000000000000000000000000001111 K
b0100000 N
b0000000 Q
b100 S
b01000 T
b00101 U
b00101 ^
b01000 c
b000000000000000011000 g
b00000000000000000000000000000101 l
1+!
#125
0+!
#130
b00000000010000101111010010110011 $
b01001 (
b01000 /
b00000000000000000000000000001010 1
b00111 2
b00000000000000000000000000001111 4
b00000000000000000000000000001010 6
b00000000000000000000000000011100 <
b00000000010000101110010100110011 >
b00000000000000000000000000011000 ?
b00000000010000101111010010110011 @
b00000000000000000000000000001111 A
b01000 D
b00000000010000101100010000110011 E
b00111 F
b00000000000000000000000000001111 H
b00110 I
b00000000000000000000000000010100 K
b100 M
b0000000 N
b111 S
b01001 T
b01001 c
b000000000000000011100 g
b00000000000000000000000000001111 m
1+!
#135
0+!
#140
b00000000010000101110010100110011 $
b01010 (
b01001 /
b00000000000000000000000000000101 1
b01000 2
b00000000000000000000000000001010 4
b00000000000000000000000000000101 6
b00000000000000000000000000100000 <
b00000000010000101011010110110011 >
b00000000000000000000000000011100 ?
b00000000010000101110010100110011 @
b01001 D
b00000000010000101111010010110011 E
b01000 F
b00000000000000000000000000001010 H
b00111 I
b00000000000000000000000000001111 K
b111 M
b110 S
b01010 T
b01010 c
b000000000000000100000 g
b00000000000000000000000000010100 n
1+!
#145
0+!
#150
b00000000010000101011010110110011 $
b01011 (
b01010 /
b00000000000000000000000000001111 1
b01001 2
b00000000000000000000000000000101 4
b00000000000000000000000000001111 6
b00000000000000000000000000100100 <
b00000000010000101010011000110011 >
b00000000000000000000000000100000 ?
b00000000010000101011010110110011 @
b01010 D
b00000000010000101110010100110011 E
b01001 F
b00000000000000000000000000000101 H
b01000 I
b00000000000000000000000000001010 K
b110 M
b011 S
b01011 T
b01011 c
b000000000000000100100 g
b00000000000000000000000000001111 o
1+!
#155
0+!
#160
b00000000010000101010011000110011 $
b01100 (
b01011 /
b00000000000000000000000000000000 1
b01010 2
b00000000000000000000000000001111 4
b00000000000000000000000000000000 6
b00000000000000000000000000101000 <
b00000000010000101001011010110011 >
b00000000000000000000000000100100 ?
b00000000010000101010011000110011 @
b01011 D
b00000000010000101011010110110011 E
b01010 F
b00000000000000000000000000001111 H
b01001 I
b00000000000000000000000000000101 K
b011 M
b010 S
b01100 T
b01100 c
b000000000000000101000 g
b00000000000000000000000000001010 p
1+!
#165
0+!
#170
b00000000010000101001011010110011 $
b01101 (
b01100 /
b01011 2
b00000000000000000000000000000000 4
b00000000000000000000000000101100 <
b00000000010000101101011100110011 >
b00000000000000000000000000101000 ?
b00000000010000101001011010110011 @
b01100 D
b00000000010000101010011000110011 E
b01011 F
b00000000000000000000000000000000 H
b01010 I
b00000000000000000000000000001111 K
b010 M
b001 S
b01101 T
b01101 c
b000000000000000101100 g
b00000000000000000000000000000101 q
1+!
#175
0+!
#180
b00000000010000101101011100110011 $
b01110 (
b01101 /
b00000000000000000000000111100000 1
b01100 2
b00000000000000000000000111100000 6
b00000000000000000000000000110000 <
b01000000010000101101011110110011 >
b00000000000000000000000000101100 ?
b00000000010000101101011100110011 @
b01101 D
b00000000010000101001011010110011 E
b01100 F
b01011 I
b00000000000000000000000000000000 K
b001 M
b101 S
b01110 T
b01110 c
b000000000000000110000 g
b00000000000000000000000000001111 r
1+!
#185
0+!
#190
b01000000010000101101011110110011 $
b01111 (
b01110 /
b00000000000000000000000000000000 1
b01101 2
b00000000000000000000000111100000 4
b00000000000000000000000000000000 6
b00000000000000000000000000110100 <
b00000000000000000000000000000000 >
b00000000000000000000000000110000 ?
b01000000010000101101011110110011 @
b01110 D
b00000000010000101101011100110011 E
b01101 F
b00000000000000000000000111100000 H
b01100 I
b101 M
b0100000 Q
b01111 T
b01111 c
b000000000000000110100 g
1+!
#195
0+!
#200
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
b00000 (
b00000 )
b00000 *
0+
0,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b01111 /
b01110 2
b00000000000000000000000000000000 4
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000111000 <
b00000000000000000000000000110100 ?
b00000000000000000000000000000000 @
b01111 D
b01000000010000101101011110110011 E
b01110 F
b00000000000000000000000000000000 H
b01101 I
b00000000000000000000000111100000 K
b0100000 N
b0000000 Q
b0000000 R
b000 S
b00000 T
b00000 U
b00000 V
b00000 ^
b00000 _
0`
0a
0b
b00000 c
0e
b000000000000000111000 g
1+!
#205
0+!
#210
b00000 /
00
b01111 2
b00000000000000000000000000111100 <
b00000000000000000000000000111000 ?
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
0C
b00000 D
b00000000000000000000000000000000 E
b01111 F
b01110 I
b00000000000000000000000000000000 K
b0000000 L
b000 M
b0000000 N
0P
b000000000000000111100 g
b00000000000000000000000111100000 u
1+!
#215
0+!
#220
b00000 2
03
b00000000000000000000000001000000 <
b00000000000000000000000000111100 ?
b00000 F
0G
b01111 I
b000000000000001000000 g
1+!
#225
0+!
#230
b00000000000000000000000001000100 <
b00000000000000000000000001000000 ?
b00000 I
0J
b000000000000001000100 g
1+!
#235
0+!
#240
b00000000000000000000000001001000 <
b00000000000000000000000001000100 ?
b000000000000001001000 g
1+!
#245
0+!
#250
b00000000000000000000000001001100 <
b00000000000000000000000001001000 ?
b000000000000001001100 g
1+!
